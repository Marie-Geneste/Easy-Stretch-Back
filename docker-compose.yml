# Restart des dockers (reload des fichiers modifier si node daemon ne le fait pas)
# docker-compose restart
# Rebuild complet des dockers mais avec persistance
# docker-compose up -d
# Rentrer dans le docker postgresql (changer le nom si besoin d'aller dans les autres)
# docker exec -ti postgrecontainer bash
#se connecter Ã  la base
#psql -U marie -d easystretch_db
# Rebuild avec le .env qu'on souhaite
#docker compose --env-file .env.dev up -d --build
#docker compose --env-file .env.prod up -d --build

services:
  frontend:
    container_name: reactcontainer
    build:
      context: ../O-Stretch--Front       
      dockerfile: Dockerfile
    ports:
      - "${PORT_FRONT}:${PORT_FRONT}"                    
    volumes:
      - ../O-Stretch--Front:/O-Stretch--Front
      - /O-Stretch--Front/node_modules
    environment:
      REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
      REACT_APP_RECAPTCHA_SITE_KEY: ${REACT_APP_RECAPTCHA_SITE_KEY}
      HOST: ${HOST}
      PORT: ${PORT_FRONT}
    depends_on:
      - backend
    command: ["npm", "start"]


  backend:
    container_name: nodecontainer
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./app:/O-Stretch--Back/app
      - ./package.json:/O-Stretch--Back/package.json
      - ./.env:/O-Stretch--Back/.env
      - ./index.js:/O-Stretch--Back/index.js
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      GMAIL_USER: ${GMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      FRONT_URL: ${FRONT_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
    depends_on:
      - postgresql

  postgresql:
    container_name: postgrecontainer
    build: 
      context: .
      dockerfile: Postgres.Dockerfile
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}

volumes:
  db-data:

